Function(is_header = 1, prams = 1)
  Declaration(tokens = 9, name = Print)
    WORD[example_roots.c:23:1] data = void
    WORD[example_roots.c:23:6] data = Print
    CHAR[example_roots.c:23:11] data = <
    CHAR[example_roots.c:23:22] data = >
    CHAR[example_roots.c:23:23] data = (
    CHAR[example_roots.c:23:24] data = )
    CHAR[example_roots.c:23:26] data = =
    NUMBER[example_roots.c:23:28] data = 0
    CHAR[example_roots.c:23:29] data = ;
  Declaration(tokens = 3, name = root)
    WORD[example_roots.c:23:12] data = Root
    CHAR[example_roots.c:23:16] data = *
    WORD[example_roots.c:23:18] data = root

Function(is_header = 0, prams = 1)
  Declaration(tokens = 6, name = Print)
    WORD[example_roots.c:25:1] data = void
    WORD[example_roots.c:25:6] data = Print
    CHAR[example_roots.c:25:11] data = <
    CHAR[example_roots.c:25:31] data = >
    CHAR[example_roots.c:25:32] data = (
    CHAR[example_roots.c:25:33] data = )
  Declaration(tokens = 5, name = root)
    WORD[example_roots.c:25:12] data = Root
    CHAR[example_roots.c:25:16] data = <
    CHAR[example_roots.c:25:24] data = >
    CHAR[example_roots.c:25:25] data = *
    WORD[example_roots.c:25:27] data = root

Function(is_header = 0, prams = 1)
  Declaration(tokens = 6, name = Print)
    WORD[example_roots.c:29:1] data = void
    WORD[example_roots.c:29:6] data = Print
    CHAR[example_roots.c:29:11] data = <
    CHAR[example_roots.c:29:32] data = >
    CHAR[example_roots.c:29:33] data = (
    CHAR[example_roots.c:29:34] data = )
  Declaration(tokens = 5, name = root)
    WORD[example_roots.c:29:12] data = Root
    CHAR[example_roots.c:29:16] data = <
    CHAR[example_roots.c:29:25] data = >
    CHAR[example_roots.c:29:26] data = *
    WORD[example_roots.c:29:28] data = root

Function(is_header = 0, prams = 1)
  Declaration(tokens = 6, name = Print)
    WORD[example_roots.c:34:1] data = void
    WORD[example_roots.c:34:6] data = Print
    CHAR[example_roots.c:34:11] data = <
    CHAR[example_roots.c:34:30] data = >
    CHAR[example_roots.c:34:31] data = (
    CHAR[example_roots.c:34:32] data = )
  Declaration(tokens = 5, name = root)
    WORD[example_roots.c:34:12] data = Root
    CHAR[example_roots.c:34:16] data = <
    CHAR[example_roots.c:34:23] data = >
    CHAR[example_roots.c:34:24] data = *
    WORD[example_roots.c:34:26] data = root

Function(is_header = 0, prams = 0)
  Declaration(tokens = 13, name = EvalOneRoot)
    WORD[example_roots.c:38:1] data = void
    WORD[example_roots.c:38:6] data = EvalOneRoot
    CHAR[example_roots.c:38:17] data = (
    WORD[example_roots.c:38:18] data = double
    WORD[example_roots.c:38:25] data = a
    CHAR[example_roots.c:38:26] data = ,
    WORD[example_roots.c:38:28] data = double
    WORD[example_roots.c:38:35] data = b
    CHAR[example_roots.c:38:36] data = ,
    WORD[example_roots.c:38:38] data = Root
    CHAR[example_roots.c:38:42] data = *
    WORD[example_roots.c:38:44] data = root
    CHAR[example_roots.c:38:48] data = )

Function(is_header = 0, prams = 0)
  Declaration(tokens = 16, name = EvalTwoRoots)
    WORD[example_roots.c:45:1] data = void
    WORD[example_roots.c:45:6] data = EvalTwoRoots
    CHAR[example_roots.c:45:18] data = (
    WORD[example_roots.c:45:19] data = double
    WORD[example_roots.c:45:26] data = a
    CHAR[example_roots.c:45:27] data = ,
    WORD[example_roots.c:45:29] data = double
    WORD[example_roots.c:45:36] data = b
    CHAR[example_roots.c:45:37] data = ,
    WORD[example_roots.c:45:39] data = double
    WORD[example_roots.c:45:46] data = d
    CHAR[example_roots.c:45:47] data = ,
    WORD[example_roots.c:45:49] data = Root
    CHAR[example_roots.c:45:53] data = *
    WORD[example_roots.c:45:55] data = root
    CHAR[example_roots.c:45:59] data = )

Function(is_header = 0, prams = 0)
  Declaration(tokens = 7, name = EvalNoRoot)
    WORD[example_roots.c:53:1] data = void
    WORD[example_roots.c:53:6] data = EvalNoRoot
    CHAR[example_roots.c:53:16] data = (
    WORD[example_roots.c:53:17] data = Root
    CHAR[example_roots.c:53:21] data = *
    WORD[example_roots.c:53:23] data = root
    CHAR[example_roots.c:53:27] data = )

Function(is_header = 0, prams = 0)
  Declaration(tokens = 16, name = SolveQuadratic)
    WORD[example_roots.c:60:1] data = void
    WORD[example_roots.c:60:6] data = SolveQuadratic
    CHAR[example_roots.c:60:20] data = (
    WORD[example_roots.c:60:21] data = double
    WORD[example_roots.c:60:28] data = a
    CHAR[example_roots.c:60:29] data = ,
    WORD[example_roots.c:60:31] data = double
    WORD[example_roots.c:60:38] data = b
    CHAR[example_roots.c:60:39] data = ,
    WORD[example_roots.c:60:41] data = double
    WORD[example_roots.c:60:48] data = c
    CHAR[example_roots.c:60:49] data = ,
    WORD[example_roots.c:60:51] data = Root
    CHAR[example_roots.c:60:55] data = *
    WORD[example_roots.c:60:57] data = root
    CHAR[example_roots.c:60:61] data = )

Function(is_header = 0, prams = 0)
  Declaration(tokens = 4, name = main)
    WORD[example_roots.c:71:1] data = int
    WORD[example_roots.c:71:5] data = main
    CHAR[example_roots.c:71:9] data = (
    CHAR[example_roots.c:71:10] data = )

